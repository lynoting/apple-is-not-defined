{"version":3,"sources":["commands.tsx","helpers.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LOGIN_ERROR_MSG","COMMANDS","title","contents","tags","tag","fuse","Fuse","shouldSort","includeScore","keys","name","weight","splitContentStringIntoLineArrays","str","replace","split","map","v","trim","waitForMs","ms","Promise","resolve","setTimeout","App","terminalRef","useRef","useState","tapIndex","settapIndex","isShowing","setisShowing","isUserNamePrompt","setisUserNamePrompt","isHeroTypeprompt","setisHeroTypeprompt","className","classNames","onClick","event","target","tagName","current","targetStr","char","idx","state","instances","instance","com","value","slice","Math","random","reduce","promise","cv","then","handleChange","key","length","ref","color","backgroundColor","barColor","prompt","style","fontWeight","fontSize","allowTabs","hideTopBar","commands","help","commandPassThrough","cmd","print","runCommand","setState","blur","messages","query","result","searchResult","search","console","log","match","filter","score","item","searchMsg","join","msg","_speedAnnotation","_msgBody","_speed","_speedAdditional","Number","i","currentValue","description","show","clear","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56e89d65.chunk.js","sourcesContent":["export const INTERVAL_CHAR_FAST = 25;\nexport const INTERVAL_CHAR = 40;\nexport const INTERVAL_CHAR_SLOW = 120;\nexport const INTERVAL_CHAR_VERYSLOW = 180;\nexport const SPEED_ANNOTATION_SYMBOL = '@';\n\nexport const INTERVAL_LINE = 400;\nexport const INTERVAL_INPUT = 40;\n\nexport const WAIT_ANNOTATION_SYMBOL = '|';\n\nexport const LOGIN_ERROR_MSG = `You are not authorized. ${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}Please try to enter again once you have got small enough.\n\nIt is strongly recommended to keep eating something very quiet.`;\n\nexport const HERO_ERROR_MSG = `It is still not the type.`;\n\nexport const COMMANDS = [\n  {\n    title: \"Alphabet\",\n    contents: `Cannot read property ‘Alphabet’ of undefined. ${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}It has been long since we last talked there.\n\n    The meaning of them has been lost.`,\n    tags: ['character']\n  },\n  {\n    title: 'login',\n    contents: `Enter your username...`,\n    tags: ['enter', 'login', 'ssh', 'authorization'],\n  },\n  {\n    title: \"Apple\",\n    contents: `‘Apple’ is not defined. ${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}Now it would perhaps be way more troublesome to think about myth or math.`,\n    tags: ['apple', 'fruit']\n  },\n  {\n    //\n    title: 'Hero',\n    contents: `‘Hero’ must be the correct type. ${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}Prepare the value of more sophisticated type and try again.\n\n    Describe cracked types, ${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}worn-out types, ${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}weeping types....`,\n    tags: ['hero', 'superman', 'ultraman', 'spiderman']\n  },\n  {\n    //\n    title: 'connect',\n    contents: 'Unfortunately you are not connected....',\n    tag: ['connect', 'network']\n  },\n  {\n    //\n    title: 'unknown error',\n    contents: `Unknown error occurred.\n    \n    Anyway I’m glad to know I don’t know nobody knows what is known nor anybody know it’s unknown.${SPEED_ANNOTATION_SYMBOL}${INTERVAL_CHAR_FAST}`,\n    tags: ['unknown']\n  },\n  {\n    title: 'HELLO',\n    contents: `PLEASE REFRAIN FROM TYPING LOUDLY.\n    Something is sleeping over your screen.`,\n    tags: []\n  },\n  {\n    title: 'find',\n    contents: `404 not found. ${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}Anywhere. ${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}But it shall come around here right after you go. ${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}I promise that it shall come. ${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}${WAIT_ANNOTATION_SYMBOL}Don’t worry.`,\n    tags: ['curl', `wget`, `apt-get`]\n  },\n  {\n    title: 'hi',\n    contents: `Say ‘Hello World’ to me, ${WAIT_ANNOTATION_SYMBOL}right here, ${WAIT_ANNOTATION_SYMBOL}right away.${SPEED_ANNOTATION_SYMBOL}${INTERVAL_CHAR_SLOW}\n    .\n    .\n    .\n    .\n    .\n    I beg you.${SPEED_ANNOTATION_SYMBOL}${INTERVAL_CHAR_SLOW}`,\n    tags: []\n  },\n  {\n    title: 'Hello World',\n    contents: `Fatal Error: The monitor is looking at you.${SPEED_ANNOTATION_SYMBOL}${INTERVAL_CHAR_FAST}\n    \n    It is aware that you have not been that talkative since the miserable bird has flown away last year.`,\n    tags: []\n  }\n] as const","import Fuse from 'fuse.js';\nimport { COMMANDS } from './commands';\n\ntype CommandsDef = typeof COMMANDS[number];\ntype ReturnDef = {\n  item: CommandsDef;\n  score: number;\n}\n\nconst options: Fuse.FuseOptions<CommandsDef> = {\n  shouldSort: true,\n  includeScore: true,\n  keys: [{\n    name: 'title',\n    weight: 0.4\n  },\n   {\n    name: 'contents',\n    weight: 0.3\n  },\n  {\n    name: 'tags',\n    weight: 0.4\n  }\n],\n};\n\n\nconst fuse = new Fuse(COMMANDS, options);\n\nexport const searchMsg = (query: string): {\n  title: string;\n  contents: string[]\n} => {\n  const searchResult = fuse.search(query) as (ReturnDef[]);\n  let result: CommandsDef;\n  console.log(searchResult);\n  switch (true) {\n    case !!query?.match(/^[A-Z]+$/):\n      result = COMMANDS.filter(v => v.title === 'HELLO')[0];\n      break;\n    // @ts-ignore\n    case !searchResult[0]:\n    case searchResult[0].score > 0.2:\n      if (Math.random() > 0.3) {\n        result = COMMANDS.filter(v => v.title === 'find')[0];\n      } else {\n        result = COMMANDS.filter(v => v.title === 'unknown error')[0];\n      }\n      break;\n\n    default:\n      result = searchResult[0].item;\n      break;\n  }\n  return {\n    ...result,\n    contents: splitContentStringIntoLineArrays(result.contents)\n  };\n}\n\nexport const splitContentStringIntoLineArrays = (str: string) => str.replace(/\\s{4}/g, '//').split('//').map(v => v.trim());\n","import React, {useRef, useState, SyntheticEvent} from 'react';\nimport { COMMANDS, INTERVAL_CHAR, INTERVAL_LINE, INTERVAL_INPUT, WAIT_ANNOTATION_SYMBOL, LOGIN_ERROR_MSG, HERO_ERROR_MSG } from './commands';\nimport classNames from 'classnames';\n\n// @ts-ignore\nimport Terminal from 'terminal-in-react/src/js/index';\nimport { searchMsg, splitContentStringIntoLineArrays } from './helpers';\n\n\nconst waitForMs = (ms = INTERVAL_LINE) => () => new Promise<void>(resolve => {\n  setTimeout(() => {\n    resolve();\n  }, ms)\n})\n\nconst App: React.FC = () => {\n  const terminalRef = useRef<Terminal>(null);\n  const [tapIndex, settapIndex] = useState(0);\n  const [isShowing, setisShowing] = useState(false);\n  const [isUserNamePrompt, setisUserNamePrompt] = useState(false);\n  const [isHeroTypeprompt, setisHeroTypeprompt] = useState(false);\n\n  const handleClick = (event: SyntheticEvent<HTMLElement>) => {\n    // @ts-ignore\n    const targetTag:string = event.target.tagName;\n    if (targetTag === 'INPUT') {\n      return;\n    }\n    if (isShowing) {\n      return;\n    }\n    setisShowing(true);\n    if (terminalRef && terminalRef.current) {\n      let targetStr:string = COMMANDS[tapIndex].title;\n\n      if (isUserNamePrompt) {\n        targetStr = 'admin';\n      }\n      if (isHeroTypeprompt) {\n        targetStr = 'new Hero<strong>(\"AnpanMan\")';\n      }\n      // 1文字ずつタイピング\n      targetStr\n        .split('')\n        .map((char, idx) => () => new Promise<void>(resolve => {\n          setTimeout(() => {\n            terminalRef.current.state.instances[0].instance\n            .com.value = targetStr.slice(0, idx + 1);\n            resolve();\n          }, INTERVAL_INPUT * (Math.random() / 2 + 1))\n        }))\n        .reduce((promise, cv) => {\n          return promise.then(cv)\n        }, Promise.resolve())\n        .then(waitForMs())\n        .then(() => {\n          terminalRef.current.state.instances[0].instance.handleChange({ target: { value: targetStr }, key: 'Enter' });\n          terminalRef.current.state.instances[0].instance\n            .com.value = \"\";\n          if (isUserNamePrompt || isHeroTypeprompt) {\n            return;\n          }\n          if (tapIndex === COMMANDS.length - 1) {\n            settapIndex(0)\n          } else {\n            settapIndex(tapIndex + 1);\n          }  \n        })\n      \n    }\n  }\n  \n\n  return (\n    <div className={\n      classNames({\n        'l-terminalwrapper': true,\n        'l-terminalwrapper--disabled': isShowing\n      })\n    }\n    onClick={handleClick}\n    >\n      <div className=\"l-terminalwrapper__inner\">\n      <Terminal\n      ref={terminalRef}\n      color='white'\n      backgroundColor='#333'\n      barColor='black'\n      prompt='white'\n      style={{ fontWeight: \"normal\", fontSize: \"1em\" }}\n      allowTabs={false}\n      hideTopBar={true}\n      commands={{\n        help: () => `Tap screen, click screen or input some command such as \"Apple\", \"login\"`\n      }}\n      commandPassThrough={(cmd: any,print: any,runCommand:any) => {\n        // messageを検索して表示\n        setisShowing(true);\n        terminalRef.current.state.instances[0].instance.setState({\n          'prompt': '>'\n        })\n        terminalRef.current.state.instances[0].instance\n          .com.blur();\n        // @ts-ignore\n        let messages = searchMsg(cmd.join(' '));\n        if (isUserNamePrompt) {\n          messages = {\n            title: 'loginFailed',\n            contents: splitContentStringIntoLineArrays(LOGIN_ERROR_MSG)\n          }\n        } else if (isHeroTypeprompt) {\n          messages = {\n            title: 'heroFailed',\n            contents: splitContentStringIntoLineArrays(HERO_ERROR_MSG)\n          }\n        }\n        const msgPromises = messages.contents.map((msg) => {\n          return () => new Promise<void>((resolve) => {\n            print('');\n            if (msg.length === 0) {\n              resolve();\n            }\n            const _speedAnnotation = msg.split('@')[1];\n            let _msgBody = msg;\n            let _speed = INTERVAL_CHAR;\n            let _speedAdditional = 0;\n            if (_speedAnnotation) {\n              _speed = Number(_speedAnnotation);\n              _msgBody = msg.split('@')[0]\n            }\n            for (let i = 0; i < _msgBody.length; i += 1) {\n              const nextChar = _msgBody[i];\n              if (nextChar === WAIT_ANNOTATION_SYMBOL) {\n                _msgBody = _msgBody.replace(WAIT_ANNOTATION_SYMBOL, '');\n                i--;\n                _speedAdditional += _speed * 2\n              }\n              setTimeout(() => {\n                runCommand(`edit-line ${_msgBody.slice(0, i + 1)}`);\n                if (i === _msgBody.length - 1) {\n                  resolve();\n                }\n              }, (_speed * i) + _speedAdditional);  \n            }\n          });\n        });\n        msgPromises\n        .reduce((promise, currentValue) => {\n          return promise.then(waitForMs()).then(currentValue);\n        },Promise.resolve())\n        .then(() => {\n          if (messages.title === 'Hero') {\n            setisHeroTypeprompt(true);\n            setTimeout(() => {\n              terminalRef.current.state.instances[0].instance.setState({\n                'prompt': 'type:'\n              })  \n              setisShowing(false);\n\n            }, 200)\n          } else if (messages.title === 'login') {\n            setisUserNamePrompt(true);\n            setTimeout(() => {\n              terminalRef.current.state.instances[0].instance.setState({\n                'prompt': 'username:'\n              })\n              setisShowing(false);\n\n            }, 200)\n          } else {\n            setisUserNamePrompt(false);\n            setisHeroTypeprompt(false);\n            setisShowing(false);\n          }\n        });     \n\n        \n      }}\n      // @ts-ignore\n      description={{ 'type-text': 'Types a input text', /* disable default option */show: false, clear: false }}\n\n      msg='Tap screen, click screen or input some command'\n    />\n\n      </div>\n  </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}